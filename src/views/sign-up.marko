class {
	onCreate() {
		this.state = {pwd: "", conf: "", username: "", phone: "", highlight: false, error: ""};
	}
	updatePwd(_, el) {this.state.pwd = el.value;}
	updateConf(_, el) {this.state.conf = el.value;}
	updateUsername(_, el) {this.state.username = el.value;}
	updatePhone(_, el) {this.state.phone = el.value;}
	flash() {
		this.state.highlight = true;
		setTimeout(() => {this.state.highlight = false;}, 100);
	}
	submit() {
		fetch("/api/v1/users", {
			method: "POST",
			headers: {"Content-Type": "application/json"},
			body: JSON.stringify({
				username: this.state.username,
				password: this.state.pwd,
				number: this.state.phone
			})
		}).then(res => {
			if(res.status === 201)
				return window.location.assign("/login");
			res.json().then(body => {
				this.state.error = body.error || "An error occurred creating a new user";
				this.flash();
			}).catch(e => {
				console.error(e);
				this.state.error = "An error occurred creating a new user";
				this.flash();
			});
		}).catch(e => {
			console.error(e);
			this.state.error = "An error occurred creating a new user";
			this.flash();
		});
	}
}

<base-outline title="Sign Up | Quiz Game">
	<@body>
		<div class="card">
			<h2>Sign Up</h2>
			<input type="text" placeholder="Username" value=state.username on-input("updateUsername") /><br/>
			<input type="password" placeholder="Password" value=state.pwd on-input("updatePwd") /><br/>
			<input type="password" placeholder="Confirm Password" value=state.conf
				style={backgroundColor: (state.pwd === state.conf ? 'white' : '#ffc0c0')}
				on-input("updateConf") /><br/>
			<input type="text" placeholder="Phone Number" value=state.phone on-input("updatePhone") /><br/>
			<input type="button" value="Sign Up" on-click("submit") />
			<div class={"error-container--highlight": state.highlight}>
				<if(state.error)>
					<div class="error-box">${state.error}</div>
				</if>
			</div>
		</div>
	</@body>
</base-outline>

style {
	.card {
		width: 50%;
		margin-left: 50%;
		transform: translate(-50%, 0);
		box-shadow: 0px 1px 8px rgba(0,0,0,0.3);
		text-align: center;
		overflow: auto;
	}
	.card input {
		padding: 8px;
		margin: 0.5em;
		border-radius: 8px;
		border: 1px solid #ccc;
		outline: none;
	}
	.card input:focus {
		border: 1px solid black;
	}
	.card input[type="button" i] {
		background-color: white;
	}
	.card input[type="button" i]:hover {
		background-color: #ccc;
	}
	.error-box {
		background-color: #ffc0c0;
		border: 1px solid red;
		border-radius: 8px;
	}
	.error-container--highlight .error-box {
		background-color: #ff8080;
	}
}